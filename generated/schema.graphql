### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type App {
  content: Content
  id: ID!
  xml: Json
}

input AppWhereInput {
  AND: [AppWhereInput!]
  content: ContentWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
}

type AuthPayload {
  token: String
  user: User!
}

type Avatar {
  bigImg: FileIndex
  id: ID!
  thumbnailImg: FileIndex
}

input AvatarCreateInput {
  bigImg: String
  thumbnailImg: String
}

input AvatarWhereInput {
  AND: [AvatarWhereInput!]
  bigImg: FileIndexWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  thumbnailImg: FileIndexWhereInput
}

type ChatRoom {
  avatar: Avatar
  displayName: String!
  id: ID!
  memberList(after: String, before: String, first: Int, last: Int, orderBy: WeChatUserOrderByInput, skip: Int, where: WeChatUserWhereInput): [WeChatUser!]
  message(after: String, before: String, first: Int, last: Int, orderBy: MessageOrderByInput, skip: Int, where: MessageWhereInput): [Message!]
  modifyTime: DateTime
  nickname: String
  owner: WeChatUser
  username: String!
}

input ChatRoomCreateInput {
  avatar: AvatarCreateInput
  displayName: String!
  memberList: [String!]!
  modifyTime: DateTime!
  nickname: String!
  owner: String!
  username: String!
}

enum ChatRoomOrderByInput {
  displayName_ASC
  displayName_DESC
  id_ASC
  id_DESC
  modifyTime_ASC
  modifyTime_DESC
  nickname_ASC
  nickname_DESC
  username_ASC
  username_DESC
}

input ChatRoomWhereInput {
  AND: [ChatRoomWhereInput!]
  avatar: AvatarWhereInput
  displayName: String
  displayName_contains: String
  displayName_ends_with: String
  displayName_gt: String
  displayName_gte: String
  displayName_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_not: String
  displayName_not_contains: String
  displayName_not_ends_with: String
  displayName_not_in: [String!]
  displayName_not_starts_with: String
  displayName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  memberList_some: WeChatUserWhereInput
  message_some: MessageWhereInput
  modifyTime: DateTime
  modifyTime_gt: DateTime
  modifyTime_gte: DateTime
  modifyTime_in: [DateTime!]
  modifyTime_lt: DateTime
  modifyTime_lte: DateTime
  modifyTime_not: DateTime
  modifyTime_not_in: [DateTime!]
  nickname: String
  nickname_contains: String
  nickname_ends_with: String
  nickname_gt: String
  nickname_gte: String
  nickname_in: [String!]
  nickname_lt: String
  nickname_lte: String
  nickname_not: String
  nickname_not_contains: String
  nickname_not_ends_with: String
  nickname_not_in: [String!]
  nickname_not_starts_with: String
  nickname_starts_with: String
  owner: WeChatUserWhereInput
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}

type Contact {
  id: ID!
  type: String!
  weChatUser(after: String, before: String, first: Int, last: Int, orderBy: WeChatUserOrderByInput, skip: Int, where: WeChatUserWhereInput): [WeChatUser!]
}

input ContactWhereInput {
  AND: [ContactWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
  weChatUser_some: WeChatUserWhereInput
}

type Content {
  app: App
  file: File
  id: ID!
  image: Image
  text: Text
  video: Video
  voice: Voice
}

input ContentWhereInput {
  AND: [ContentWhereInput!]
  app: AppWhereInput
  file: FileWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: ImageWhereInput
  text: TextWhereInput
  video: VideoWhereInput
  voice: VoiceWhereInput
}

scalar DateTime

type File {
  content: Content
  fileName: FileIndex
  id: ID!
  size: Int
}

type FileIndex {
  fileName: String!
  id: ID!
  mimetype: String!
  size: Int!
  url: String
}

input FileIndexWhereInput {
  AND: [FileIndexWhereInput!]
  fileName: String
  fileName_contains: String
  fileName_ends_with: String
  fileName_gt: String
  fileName_gte: String
  fileName_in: [String!]
  fileName_lt: String
  fileName_lte: String
  fileName_not: String
  fileName_not_contains: String
  fileName_not_ends_with: String
  fileName_not_in: [String!]
  fileName_not_starts_with: String
  fileName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  mimetype: String
  mimetype_contains: String
  mimetype_ends_with: String
  mimetype_gt: String
  mimetype_gte: String
  mimetype_in: [String!]
  mimetype_lt: String
  mimetype_lte: String
  mimetype_not: String
  mimetype_not_contains: String
  mimetype_not_ends_with: String
  mimetype_not_in: [String!]
  mimetype_not_starts_with: String
  mimetype_starts_with: String
  size: Int
  size_gt: Int
  size_gte: Int
  size_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

input FileWhereInput {
  AND: [FileWhereInput!]
  content: ContentWhereInput
  fileName: FileIndexWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  size: Int
  size_gt: Int
  size_gte: Int
  size_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int!]
}

type Image {
  bigImg: FileIndex
  content: Content
  id: ID!
  thumbnailImg: FileIndex
}

input ImageWhereInput {
  AND: [ImageWhereInput!]
  bigImg: FileIndexWhereInput
  content: ContentWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  thumbnailImg: FileIndexWhereInput
}

scalar Json

type Message {
  chatRoom: ChatRoom
  content: Content
  createTime: DateTime
  id: ID!
  isSend: Int
  msgSvrId: String
  talker: WeChatUser!
  type: Int
}

enum MessageOrderByInput {
  createTime_ASC
  createTime_DESC
  id_ASC
  id_DESC
  isSend_ASC
  isSend_DESC
  msgSvrId_ASC
  msgSvrId_DESC
  type_ASC
  type_DESC
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  chatRoom: ChatRoomWhereInput
  content: ContentWhereInput
  createTime: DateTime
  createTime_gt: DateTime
  createTime_gte: DateTime
  createTime_in: [DateTime!]
  createTime_lt: DateTime
  createTime_lte: DateTime
  createTime_not: DateTime
  createTime_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  isSend: Int
  isSend_gt: Int
  isSend_gte: Int
  isSend_in: [Int!]
  isSend_lt: Int
  isSend_lte: Int
  isSend_not: Int
  isSend_not_in: [Int!]
  msgSvrId: String
  msgSvrId_contains: String
  msgSvrId_ends_with: String
  msgSvrId_gt: String
  msgSvrId_gte: String
  msgSvrId_in: [String!]
  msgSvrId_lt: String
  msgSvrId_lte: String
  msgSvrId_not: String
  msgSvrId_not_contains: String
  msgSvrId_not_ends_with: String
  msgSvrId_not_in: [String!]
  msgSvrId_not_starts_with: String
  msgSvrId_starts_with: String
  talker: WeChatUserWhereInput
  type: Int
  type_gt: Int
  type_gte: Int
  type_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_not: Int
  type_not_in: [Int!]
}

type Mutation {
  CreateChatRooms(data: [ChatRoomCreateInput!]!): WeChat!
  CreateWeChatUsers(data: [WeChatUserCreateInput!]!): WeChat!
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, name: String!, password: String!): AuthPayload!
}

type Query {
  chatRooms(after: String, before: String, first: Int, last: Int, orderBy: ChatRoomOrderByInput, skip: Int, where: ChatRoomWhereInput): [ChatRoom!]!
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  weChatUsers(after: String, before: String, first: Int, last: Int, orderBy: WeChatUserOrderByInput, skip: Int, where: WeChatUserWhereInput): [WeChatUser!]!
}

type Text {
  content: Content
  id: ID!
  textMsg: String!
}

input TextWhereInput {
  AND: [TextWhereInput!]
  content: ContentWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  textMsg: String
  textMsg_contains: String
  textMsg_ends_with: String
  textMsg_gt: String
  textMsg_gte: String
  textMsg_in: [String!]
  textMsg_lt: String
  textMsg_lte: String
  textMsg_not: String
  textMsg_not_contains: String
  textMsg_not_ends_with: String
  textMsg_not_in: [String!]
  textMsg_not_starts_with: String
  textMsg_starts_with: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
  id: ID!
  name: String!
  weChat(after: String, before: String, first: Int, last: Int, orderBy: WeChatOrderByInput, skip: Int, where: WeChatWhereInput): [WeChat!]
}

enum UserOrderByInput {
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  weChat_some: WeChatWhereInput
}

type Video {
  content: Content
  fileName: FileIndex
  id: ID!
  thumbnailImg: FileIndex
  videolength: Int
}

input VideoWhereInput {
  AND: [VideoWhereInput!]
  content: ContentWhereInput
  fileName: FileIndexWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  thumbnailImg: FileIndexWhereInput
  videolength: Int
  videolength_gt: Int
  videolength_gte: Int
  videolength_in: [Int!]
  videolength_lt: Int
  videolength_lte: Int
  videolength_not: Int
  videolength_not_in: [Int!]
}

type Voice {
  content: Content
  fileName: FileIndex
  id: ID!
  voiceLength: Int
}

input VoiceWhereInput {
  AND: [VoiceWhereInput!]
  content: ContentWhereInput
  fileName: FileIndexWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  voiceLength: Int
  voiceLength_gt: Int
  voiceLength_gte: Int
  voiceLength_in: [Int!]
  voiceLength_lt: Int
  voiceLength_lte: Int
  voiceLength_not: Int
  voiceLength_not_in: [Int!]
}

type WeChat {
  chatRooms(after: String, before: String, first: Int, last: Int, orderBy: ChatRoomOrderByInput, skip: Int, where: ChatRoomWhereInput): [ChatRoom!]
  id: ID!
  messages(after: String, before: String, first: Int, last: Int, orderBy: MessageOrderByInput, skip: Int, where: MessageWhereInput): [Message!]
  weChatOwner: WeChatUser!
  weChatUsers(after: String, before: String, first: Int, last: Int, orderBy: WeChatUserOrderByInput, skip: Int, where: WeChatUserWhereInput): [WeChatUser!]
}

enum WeChatOrderByInput {
  id_ASC
  id_DESC
}

type WeChatUser {
  alias: String
  avatar: Avatar
  conRemark: String
  contact: Contact
  haveChatRoom(after: String, before: String, first: Int, last: Int, orderBy: ChatRoomOrderByInput, skip: Int, where: ChatRoomWhereInput): [ChatRoom!]
  id: ID!
  joinChatRoom(after: String, before: String, first: Int, last: Int, orderBy: ChatRoomOrderByInput, skip: Int, where: ChatRoomWhereInput): [ChatRoom!]
  message(after: String, before: String, first: Int, last: Int, orderBy: MessageOrderByInput, skip: Int, where: MessageWhereInput): [Message!]
  nickname: String
  username: String!
}

input WeChatUserCreateInput {
  alias: String!
  avatar: AvatarCreateInput
  conRemark: String!
  nickname: String!
  username: String!
}

enum WeChatUserOrderByInput {
  alias_ASC
  alias_DESC
  conRemark_ASC
  conRemark_DESC
  id_ASC
  id_DESC
  nickname_ASC
  nickname_DESC
  username_ASC
  username_DESC
}

input WeChatUserWhereInput {
  alias: String
  alias_contains: String
  alias_ends_with: String
  alias_gt: String
  alias_gte: String
  alias_in: [String!]
  alias_lt: String
  alias_lte: String
  alias_not: String
  alias_not_contains: String
  alias_not_ends_with: String
  alias_not_in: [String!]
  alias_not_starts_with: String
  alias_starts_with: String
  AND: [WeChatUserWhereInput!]
  avatar: AvatarWhereInput
  conRemark: String
  conRemark_contains: String
  conRemark_ends_with: String
  conRemark_gt: String
  conRemark_gte: String
  conRemark_in: [String!]
  conRemark_lt: String
  conRemark_lte: String
  conRemark_not: String
  conRemark_not_contains: String
  conRemark_not_ends_with: String
  conRemark_not_in: [String!]
  conRemark_not_starts_with: String
  conRemark_starts_with: String
  contact: ContactWhereInput
  haveChatRoom_some: ChatRoomWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  joinChatRoom_some: ChatRoomWhereInput
  message_some: MessageWhereInput
  nickname: String
  nickname_contains: String
  nickname_ends_with: String
  nickname_gt: String
  nickname_gte: String
  nickname_in: [String!]
  nickname_lt: String
  nickname_lte: String
  nickname_not: String
  nickname_not_contains: String
  nickname_not_ends_with: String
  nickname_not_in: [String!]
  nickname_not_starts_with: String
  nickname_starts_with: String
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}

input WeChatWhereInput {
  AND: [WeChatWhereInput!]
  chatRooms_some: ChatRoomWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  messages_some: MessageWhereInput
  weChatOwner: WeChatUserWhereInput
  weChatUsers_some: WeChatUserWhereInput
}
